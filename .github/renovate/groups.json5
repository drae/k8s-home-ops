{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  packageRules: [
    //
    // NOTE: Renovate processes rules from top to bottom, so the rules below take precedence over rules above it
    //
    // Github actions
    {
      description: "Auto merge Github Actions",
      matchManagers: ["github-actions"],
      automerge: true,
      automergeType: "pr",
      ignoreTests: true,
      matchUpdateTypes: ["minor", "patch", "digest"],
    },
    // Renovate actual
    {
      description: "Auto merge all Renovate versions",
      matchPackagePatterns: ["renovate"],
      matchUpdateTypes: ["major", "minor", "patch", "digest"],
      automerge: true,
      automergeType: "branch",
      ignoreTests: true,
      labels: ["renovate-actual"],
    },
    // FluxCD
    {
      description: "Flux Group",
      groupName: "Flux",
      matchPackagePatterns: ["fluxcd"],
      matchDatasources: ["docker", "github-tags"],
      versioning: "semver",
      group: {
        commitMessageTopic: "{{{groupName}}} group",
      },
      separateMinorPatch: true,
    },
    // Cilium
    {
      description: "Cilium image and chart",
      groupName: "cilium",
      matchPackageNames: [
        "quay.io/cilium/cilium",
        "quay.io/cilium/operator-generic",
        "cilium",
      ],
      matchDatasources: ["helm", "docker"],
      group: {
        commitMessageTopic: "{{{groupName}}} group",
      },
      separateMinorPatch: true,
    },
    // Snapshotter
    {
      description: "External Snapshotter charts",
      groupName: "External Snapshotter",
      matchPackageNames: ["snapshot-controller", "snapshot-validation-webhook"],
      matchDatasources: ["helm"],
      group: {
        commitMessageTopic: "{{{groupName}}} group",
      },
      separateMinorPatch: true,
    },
    // Vector (aggregator & agent)
    {
      description: "Vector image and chart - versions do not match",
      groupName: "Vector",
      matchPackagePatterns: ["vector"],
      matchDatasources: ["docker", "github-releases", "helm"],
      matchUpdateTypes: ["minor", "patch"],
      group: {
        commitMessageTopic: "{{{groupName}}} group",
      },
      separateMinorPatch: false,
    },
    // manually approve app-template major releases
    {
      matchPackagePatterns: ["app-template"],
      matchDatasources: ["helm"],
      matchUpdateTypes: ["major"],
      dependencyDashboardApproval: true,
      automerge: false,
      separateMajorMinor: true,
      separateMultipleMajor: true,
      separateMinorPatch: true,
      groupName: "app-template-major",
      commitMessagePrefix: "feat(app-template/major)!: ",
      labels: ["app-template", "major"],
    },
  ],
}
