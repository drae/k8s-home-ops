{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  extends: [
    "config:recommended",
    ":automergeDigest",
    ":automergeBranchPush",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":enablePreCommit",
    ":semanticCommits",
    "docker:enableMajor",
    "github>drae/k8s-home-ops//.github/renovate/autoMerge.json5",
    "github>drae/k8s-home-ops//.github/renovate/commitMessage.json5",
    "github>drae/k8s-home-ops//.github/renovate/groups.json5",
    "github>drae/k8s-home-ops//.github/renovate/labels.json5",
    "github>drae/k8s-home-ops//.github/renovate/semanticCommits.json5",
    "github>drae/k8s-home-ops//.github/renovate/disabledDatasources.json5",
  ],
  platform: "github",
  username: "drae-bot[bot]",
  repositories: ["drae/k8s-home-ops"],
  gitAuthor: "drae-bot <107273482+drae-bot[bot]@users.noreply.github.com>",
  dependencyDashboardTitle: "Renovate Dashboard ðŸ¤–",
  rebaseWhen: "conflicted",
  ignorePaths: ["_archived/**"],
  flux: {
    fileMatch: ["kubernetes/.+\\.ya?ml$"],
  },
  "helm-values": {
    fileMatch: ["kubernetes/.+\\.ya?ml$"],
  },
  kubernetes: {
    fileMatch: ["kubernetes/.+\\.ya?ml$"],
  },
  regexManagers: [
    {
      description: "Process various dependencies in YAML files",
      fileMatch: ["\\.ya?ml$"],
      matchStrings: [
        // Inline
        '\\S+: "?(?<currentValue>[^"\\s]+)"? # ?renovate: depName=(?<depName>\\S+)( datasource=(?<datasource>\\S+))?( versioning=(?<versioning>\\S+))?( extractVersion=(?<extractVersion>\\S+))?',
        // Newline
        '(?m:^\\s+# ?renovate: depName=(?<depName>\\S+)( datasource=(?<datasource>\\S+))?( versioning=(?<versioning>\\S+))?( extractVersion=(?<extractVersion>\\S+))?\\n[ \\t ]*? \\S+: "?(?<currentValue>[^" ]+)"?$)',
        // Old style newline
        '(?m:^\\s+# ?renovate: datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?( versionTemplate=(?<extractVersion>\\S+))?\\n[ \\t ]*? \\S+: "?(?<currentValue>[^" ]+)"?$)',
      ],
      datasourceTemplate: "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      extractVersionTemplate: "{{#if extractVersion}}{{{extractVersion}}}{{else}}^v?(?<version>.*)${{/if}}",
    },
  ],
  packageRules: [
    // Version strategies
    {
      description: "Use loose versioning for certain dependencies",
      matchDatasources: ["docker", "github-releases"],
      versioning: "loose",
      matchPackageNames: [
        "ghcr.io/onedr0p/plex",
        "ghcr.io/onedr0p/plex-beta",
        "ghcr.io/onedr0p/qbittorrent",
      ],
    },
  ],
}
