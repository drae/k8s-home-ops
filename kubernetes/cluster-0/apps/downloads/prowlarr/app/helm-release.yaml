---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prowlarr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 30m
  values:
    controllers:
      main:
        type: statefulset
        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 1Gi
              storageClass: zfs-local-dataset
              globalMounts:
                - path: /config
        annotations:
          reloader.stakater.com/auto: "true"
          setGateway: "true"
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
        initContainers:
          01-litestream-init:
            image:
              repository: docker.io/litestream/litestream
              tag: "0.3.11"
            args:
              [
                "restore",
                "-if-db-not-exists",
                "-if-replica-exists",
                "-v",
                "/config/prowlarr.db",
              ]
            env:
              LITESTREAM_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
              LITESTREAM_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/prowlarr-nightly
              tag: 1.9.3.4013@sha256:800d6f6fcdbe40c2528ebe838cfef5d4618263109c55ed4ed0123bfe45663aee
            env:
              PROWLARR__API_KEY: ${PROWLARR_API_KEY}
              PROWLARR__INSTANCE_NAME: Prowlarr
              PROWLARR__PORT: &port 9696
              PROWLARR__LOG_LEVEL: info
              PROWLARR__ANALYTICS_ENABLED: "False"
              PROWLARR__AUTHENTICATION_METHOD: External
              PROWLARR__THEME: dark
            resources:
              requests:
                cpu: 25m
                memory: 100Mi
              limits:
                memory: 250Mi
          litestream:
            image:
              repository: docker.io/litestream/litestream
              tag: "0.3.11"
            args: ["replicate"]
            env:
              LITESTREAM_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
              LITESTREAM_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    service:
      main:
        ports:
          http:
            port: *port
          metrics:
            enabled: true
            port: 9090
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      main:
        enabled: true
        className: ingress-nginx-int
        hosts:
          - host: &host "prowlarr.${SECRET_DOMAIN_PROXY}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      litestream-init-config:
        enabled: true
        type: configMap
        name: prowlarr-litestream
        advancedMounts:
          main:
            01-litestream-init:
              - path: /etc/litestream.yml
                subPath: litestream.yml
                readOnly: true
      litestream-config:
        enabled: true
        type: configMap
        name: prowlarr-litestream
        advancedMounts:
          main:
            litestream:
              - path: /etc/litestream.yml
                subPath: litestream.yml
                readOnly: true
