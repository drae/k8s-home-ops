---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 67.9.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 30m
  install:
    createNamespace: true
  values:
    crds:
      enabled: true
    cleanPrometheusOperatorObjectNames: true
    #
    # Individual stack components
    #
    alertmanager:
      enabled: false
    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            sourceLabels: ["__name__"]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeStateMetrics:
      enabled: false
    nodeExporter:
      enabled: false
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          annotations:
            grafana_folder: Kubernetes
    #
    # Prometheus configuration
    #
    prometheusOperator:
      resources:
        requests:
          cpu: 35m
          memory: 273M
        limits:
          memory: 326M
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 11m
            memory: 32M
          limits:
            memory: 32M
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: ingress-nginx-int
        hosts:
          - "prometheus.p.lan.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "prometheus.p.lan.${SECRET_DOMAIN}"
      prometheusSpec:
        alertingEndpoints:
          - namespace: monitoring
            name: alertmanager
            port: 9093
            apiVersion: v2
        additionalAlertManagerConfigs:
          - scheme: http
            static_configs:
              - targets:
                  - "alertmanager.monitoring.svc.cluster.local:9093"
                labels:
                  server: alertmanager.monitoring
        enableAdminAPI: true
        enableFeatures:
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        externalLabels:
          cluster: ${CLUSTER_NAME}
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        replicas: 1
        replicaExternalLabelName: __replica__
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 3000Mi
        retention: 14d
        retentionSize: 22GB
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: topolvm-thin-provisioner
              resources:
                requests:
                  storage: 25Gi
        walCompression: true
        additionalScrapeConfigs: |
          - job_name: node-exporter
            scrape_interval: 1m
            scrape_timeout: 10s
            honor_timestamps: true
            static_configs:
              - targets:
                  - "${IP_ADDR_LAN_GW}:9100"
                  - "${IP_ADDR_LAN_NAS}:9100"
                  - "${IP_ADDR_LAN_GRAVITY}:9100"
          - job_name: "topolvm"
            kubernetes_sd_configs:
              - role: pod
                namespaces:
                  names: 
                    - storage
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
                action: keep
                regex: node
              - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                action: replace
                regex: ([^:]+)(?::\d+)?;(\d+)
                replacement: $${1}:$${2}
                target_label: __address__
              - source_labels: [__address__]
                action: replace
                regex: ([^:]+)(?::\d+)?
                replacement: $${1}
                target_label: instance
