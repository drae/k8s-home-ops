---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: kube-prometheus-stack
spec:
  interval: 1h
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 74.2.1
  url: oci://ghcr.io/prometheus-community/charts/kube-prometheus-stack
---
# yaml-language-server: $schema=https://schemas.tholinka.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: kube-prometheus-stack
  install:
    createNamespace: true
  values:
    crds:
      enabled: true
    cleanPrometheusOperatorObjectNames: true
    #
    # Individual stack components
    #
    alertmanager:
      enabled: false
    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            sourceLabels: ["__name__"]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeStateMetrics:
      enabled: false
    nodeExporter:
      enabled: false
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          annotations:
            grafana_folder: Kubernetes
    #
    # Prometheus configuration
    #
    prometheusOperator:
      resources:
        requests:
          cpu: 35m
          memory: 273M
        limits:
          memory: 326M
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 11m
            memory: 32M
          limits:
            memory: 32M
    prometheus:
      route:
        main:
          enabled: true
          hostnames:
            - prometheus.p.lan.starstreak.net
          parentRefs:
            - name: internal
              namespace: networking
              sectionName: https
      prometheusSpec:
        alertingEndpoints:
          - namespace: monitoring
            name: alertmanager
            port: 9093
            apiVersion: v2
        additionalAlertManagerConfigs:
          - scheme: http
            static_configs:
              - targets:
                  - "alertmanager.monitoring.svc.cluster.local:9093"
                labels:
                  server: alertmanager.monitoring
        # REQUIRED: Cilium Hubble metrics are exposed via OpenMetrics. Prometheus Operator requires the `exemplar-storage` feature to be enabled to scrape OpenMetrics.
        # https://docs.cilium.io/en/stable/observability/metrics/#openmetrics
        # https://prometheus.io/docs/prometheus/latest/feature_flags/#exemplars-storage
        #        enableFeatures:
        #          - auto-gomaxprocs
        #          - new-service-discovery-manager
        #          - exemplar-storage
        #          - memory-snapshot-on-shutdown
        externalLabels:
          cluster: darkstar
        image:
          registry: docker.io
          repository: prompp/prompp
          tag: 2.53.2-0.2.5
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 3000Mi
        retention: 14d
        retentionSize: 22GB
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        securityContext:
          runAsNonRoot: true
          runAsUser: 64535
          runAsGroup: 64535
          fsGroup: 64535
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: topolvm-thin-provisioner
              resources:
                requests:
                  storage: 25Gi
        #        walCompression: true
        additionalScrapeConfigs: |
          - job_name: "node-exporter"
            scrape_interval: 1m
            scrape_timeout: 10s
            honor_timestamps: true
            static_configs:
              - targets:
                  - "10.1.10.1:9100"
                  - "10.1.10.10:9100"
                  - "10.1.10.98:9100"
          - job_name: "zfs_exporter"
            metrics_path: /metrics
            scrape_interval: 5m
            scrape_timeout: 1m
            static_configs:
              - targets: 
                  - "10.1.10.10:9134"
            relabel_configs:
              - source_labels: 
                  - name
                regex: ^([^@]*).*$
                target_label: filesystem
                replacement: ${1}
          - job_name: "topolvm"
            kubernetes_sd_configs:
              - role: pod
                namespaces:
                  names:
                    - storage
            relabel_configs:
              - source_labels: 
                  - __meta_kubernetes_pod_label_app_kubernetes_io_name
                action: keep
                regex: node
              - source_labels: 
                  - __address__
                  - __meta_kubernetes_pod_annotation_prometheus_io_port
                action: replace
                regex: ([^:]+)(?::\d+)?;(\d+)
                replacement: $${1}:$${2}
                target_label: __address__
              - source_labels:
                  - __address__
                action: replace
                regex: ([^:]+)(?::\d+)?
                replacement: $${1}
                target_label: instance
