---
- name: Prepare Ubuntu
  hosts:
    - master
    - worker
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 2 seconds...
      ansible.builtin.pause:
        seconds: 2
  tasks:
    - name: Locale
      block:
        - name: Set timezone
          community.general.timezone:
            name: "{{ timezone | default('Etc/UTC') }}"

    - name: Packages
      block:
        - name: Disable APT recommends
          ansible.builtin.blockinfile:
            path: /etc/apt/apt.conf.d/02norecommends
            mode: "0644"
            create: true
            block: |
              APT::Install-Recommends "false";
              APT::Install-Suggests "false";
              APT::Get::Install-Recommends "false";
              APT::Get::Install-Suggests "false";

        - name: Upgrade all system packages
          ansible.builtin.apt:
            upgrade: full
            update_cache: true
            cache_valid_time: 3600
            autoclean: true
            autoremove: true
          register: apt_upgrade
          retries: 5
          until: apt_upgrade is success

        - name: Install common packages
          ansible.builtin.apt:
            name: "{{ packages.apt_install }}"
            install_recommends: false
            update_cache: true
            cache_valid_time: 3600
            autoclean: true
            autoremove: true
          register: apt_install_common
          retries: 5
          until: apt_install_common is success
          when:
            - packages.apt_install is defined
            - packages.apt_install is iterable
            - packages.apt_install | length > 0

        - name: Remove crufty packages
          when:
            - packages.apt_remove is defined
            - packages.apt_remove is iterable
            - packages.apt_remove | length > 0
            - (skip_remove_packages is not defined or (skip_remove_packages is defined and not skip_remove_packages))
          block:
            - name: Remove crufty packages | gather install packages
              ansible.builtin.package_facts:
                manager: auto
              when:
                - "'snapd' in packages.apt_remove"
            - name: Remove crufty packages | check if snap is installed
              ansible.builtin.debug:
                msg: "snapd is installed"
              register: snapd_check
              when:
                - "'snapd' in packages.apt_remove"
                - "'snapd' in ansible_facts.packages"
            - name: Remove crufty packages | remove snap packages
              ansible.builtin.command: snap remove {{ item }}
              loop:
                - lxd
                - core18
                - snapd
              when:
                - "'snapd' in packages.apt_remove"
                - "'snapd' in ansible_facts.packages"
                - snapd_check.failed is defined
            - name: Remove crufty packages | remove packages
              ansible.builtin.apt:
                name: "{{ packages.apt_remove }}"
                state: absent
                autoremove: true
            - name: Remove crufty packages | remove crufty files
              ansible.builtin.file:
                state: absent
                path: "{{ item }}"
              loop:
                - "/home/{{ ansible_user }}/.snap"
                - "/snap"
                - "/var/snap"
                - "/var/lib/snapd"
                - "/var/cache/snapd"
                - "/usr/lib/snapd"
                - "/etc/cloud"
                - "/var/lib/cloud"
              when:
                - "'snapd' in packages.apt_remove"
                - "'cloud-init' in packages.apt_remove"

    - name: Networking
      notify: Reboot
      block:
        - name: Set hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"
        - name: Update /etc/hosts to include hostname
          ansible.builtin.copy:
            dest: /etc/hosts
            content: |
              127.0.0.1 localhost
              127.0.1.1 {{ inventory_hostname }}

              # The following lines are desirable for IPv6 capable hosts
              ::1     localhost ip6-localhost ip6-loopback
              ff02::1 ip6-allnodes
              ff02::2 ip6-allrouters
            mode: preserve
        - name: Check for bridge-nf-call-iptables
          ansible.builtin.stat:
            path: /proc/sys/net/bridge/bridge-nf-call-iptables
          register: bridge_nf_call_iptables_result
        - name: Sysctl | set config
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          with_dict: "{{ sysctl_config }}"
          vars:
            sysctl_config:
              net.ipv4.ip_forward: 1
              net.ipv6.conf.all.forwarding: 1
              net.bridge.bridge-nf-call-iptables: 1
              net.bridge.bridge-nf-call-ip6tables: 1
          when:
            - bridge_nf_call_iptables_result.stat.exists
          register: sysctl_network
        # https://github.com/cilium/cilium/issues/18706
        - name: Network Configuration | Cilium (1)
          ansible.builtin.lineinfile:
            dest: /etc/systemd/networkd.conf
            regexp: ManageForeignRoutingPolicyRules
            line: ManageForeignRoutingPolicyRules=no
        - name: Network Configuration | Cilium (2)
          ansible.builtin.lineinfile:
            dest: /etc/systemd/networkd.conf
            regexp: ManageForeignRoutes
            line: ManageForeignRoutes=no
