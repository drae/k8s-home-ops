---
- name: Storage server application install
  hosts:
    - storage
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 2 seconds...
      ansible.builtin.pause:
        seconds: 2
  roles:
    - role: geerlingguy.pip
    - role: geerlingguy.docker

  handlers:
    - name: Restart docker-cleanup
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: restarted
        enabled: true
        daemon_reload: true
      loop:
        - docker-cleanup.service
        - docker-cleanup.timer

    - name: Restart downloads
      ansible.builtin.systemd:
        name: "docker-compose@downloads.service"
        state: restarted
        enabled: true
        daemon_reload: true

    - name: Restart node-exporter
      ansible.builtin.systemd:
        name: "docker-compose@node-exporter.service"
        state: restarted
        enabled: true
        daemon_reload: true

  tasks:
    - name: Create default directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: users
        mode: "0775"
      loop:
        - "{{ docker_base_dir }}"
      tags:
        - always

    - name: Create docker override systemd file
      ansible.builtin.copy:
        src: "files/docker-override.conf"
        dest: "/etc/systemd/system/docker.service.d/override.conf"
        mode: "0644"
        remote_src: false

    - name: Create docker clean up systemd files
      notify: Restart docker-cleanup
      ansible.builtin.copy:
        src: "files/{{ item }}"
        dest: "/etc/systemd/system/{{ item }}"
        mode: "0644"
        remote_src: false
      loop:
        - docker-cleanup.service
        - docker-cleanup.timer

    - name: Create downloads directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: users
        mode: "0775"
      loop:
        - "{{ docker_base_dir }}/downloads/sabnzbd"

    - name: Create docker-compose for downloads
      notify: Restart downloads
      block:
        - name: Create downloads docker compose file
          ansible.builtin.template:
            src: downloads/docker-compose.yml.j2
            dest: "{{ docker_base_dir }}/downloads/docker-compose.yml"
            owner: "{{ ansible_user }}"
            group: users
            mode: "0775"
        - name: Create downloads systemd service file
          ansible.builtin.template:
            src: "docker-compose@.service.j2"
            dest: "/etc/systemd/system/docker-compose@downloads.service"
            mode: "0644"
          vars:
            condition_path_is_mount_point: "/"

    - name: Create node-exporter directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: users
        mode: "0775"
      loop:
        - "{{ docker_base_dir }}/node-exporter"

    - name: Create docker-compose for node-exporter
      notify: Restart node-exporter
      block:
        - name: Create node-exporter docker compose file
          ansible.builtin.template:
            src: node-exporter/docker-compose.yml.j2
            dest: "{{ docker_base_dir }}/node-exporter/docker-compose.yml"
            owner: "{{ ansible_user }}"
            group: users
            mode: "0775"
        - name: Create node-exporter systemd service file
          ansible.builtin.template:
            src: "docker-compose@.service.j2"
            dest: "/etc/systemd/system/docker-compose@node-exporter.service"
            mode: "0644"
          vars:
            condition_path_is_mount_point: "/"
