---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  generate-clusterconfig:
    desc: Generate clusterconfig for Talos
    cmds:
      - talhelper genconfig
        --secret-file {{.INFRASTRUCTURE_DIR}}/darkstar/talos/talsecret.sops.yaml
        --config-file {{.INFRASTRUCTURE_DIR}}/darkstar/talos/talconfig.yaml
        --out-dir {{.INFRASTRUCTURE_DIR}}/darkstar/talos/clusterconfig
    preconditions:
      - which talhelper
      - test -f {{.INFRASTRUCTURE_DIR}}/darkstar/talos/talsecret.sops.yaml
      - test -f {{.INFRASTRUCTURE_DIR}}/darkstar/talos/talconfig.yaml

  apply-clusterconfig:
    desc: Apply clusterconfig for a Talos cluster
    vars:
      CLUSTERCONFIG_FILES:
        sh: find {{.INFRASTRUCTURE_DIR}}/darkstar/talos/clusterconfig -type f -name '*.yaml' -printf '%f\n'
    cmds:
      - for:
          var: CLUSTERCONFIG_FILES
        task: apply-machineconfig
        vars:
          filename: "{{.ITEM}}"
          hostname: |-
            {{ trimPrefix (printf "%s-" "darkstar") .ITEM | trimSuffix ".yaml" }}
    preconditions:
      - talosctl config get-contexts | grep darkstar
      - test -d {{.INFRASTRUCTURE_DIR}}/darkstar/talos/clusterconfig

  apply-machineconfig:
    internal: true
    desc: Apply a single Talos machineConfig to a Talos node
    cmds:
      - talosctl --context darkstar apply-config
        --nodes "{{.hostname}}"
        --file "{{.INFRASTRUCTURE_DIR}}/darkstar/talos/clusterconfig/{{.filename}}"
        --mode="{{.MODE}}"
        {{ if eq "true" .INSECURE }}--insecure{{ end }}
        {{ if eq "true" .DRY_RUN }}--dry-run{{ end }}
    preconditions:
      - talosctl config get-contexts | grep darkstar
      - test -f {{.INFRASTRUCTURE_DIR}}/darkstar/talos/clusterconfig/{{.filename}}
    requires:
      vars:
        - hostname
        - filename
    vars:
      MODE: '{{.MODE | default "auto"}}'
